# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)
#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

--Who are the top 10 artists based on popularity?
SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER  BY popularity DESC
LIMIT 10;

--What artist released the longest song?
SELECT artist_name, track_name, MAX(duration_ms)
FROM BIT_DB.Spotifydata
ORDER BY duration_ms
LIMIT 1;

--For every artist with an average popularity of 90 or above, I wanted to show their name, their average popularity, and label them as a “Top Star”.
WITH AVG_Popularity_CTE AS(
SELECT spot.artist_name, AVG(spot.popularity) AS average_popularity
FROM Spotifydata spot
GROUP BY spot.artist_name)
SELECT artist_name, average_popularity, 'TOP STAR' AS Tag
FROM AVG_Popularity_CTE
WHERE average_popularity>=90;


